variables:
  DOCKER_IMAGE_TAG: "$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
  REGISTRY_PATH: "registry.gitlab.com/itic-uz/common-images"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_DIND_IMAGE: "docker:dind"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"


default:
  tags:
    - itic-host-runner


stages:
  - build
  - push
  - deploy

cache:
  key: maven-dependency-cache
  paths:
    - .m2/repository

build:
  stage: build
  #  image: $REGISTRY_PATH:maven-0.0.1
  image: maven:3.9.6-eclipse-temurin-17-alpine
  script:
    - mvn clean package -DskipTests=true -Dmaven.repo.local=.m2/repository
  artifacts:
    paths:
      - target/talentmanagement-0.0.1.jar
    expire_in: 1 week
  only:
    refs:
      - main

push:
  stage: push
  image: docker:25.0.0-cli-alpine3.19
  services:
    - name: docker:25.0.0-dind-alpine3.19
      alias: docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  only:
    refs:
      - main

deploy:
  stage: deploy
  image: ubuntu
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_HOST_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config'
  script:
    - ssh "$DEPLOY_HOST_USER@$DEPLOY_HOST_IP" -p 22013 "cd $CI_PROJECT_NAME &&
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker pull $CI_REGISTRY_IMAGE &&
      docker ps -a -q -f name=$CI_PROJECT_NAME | xargs -r docker rm -f &&
      docker run --network host --env-file .env -v /home/uploads:/nfs/document -v /home/user/mock-users/:/users/ -d --name $CI_PROJECT_NAME -p 8000:8000 $CI_REGISTRY_IMAGE"
  only:
    refs:
      - main
